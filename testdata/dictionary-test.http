POST http://localhost:9098/api/metadata/AbsenceType
X-Tenant-ID: default
Accept-Language: en-EN
Cache-Control: no-cache
Content-Type: application/json

{
  "$id": "https://alapierre.io/dictionary.schema.json",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "DictionaryAbsenceType",
  "type": "object",
  "required": [ "onlyOnBeginOrEnd", "needDeliveryDateConfirmation", "needConfirmationDocumentNumber" ],
  "properties": {
    "onlyOnBeginOrEnd": {
      "type": "boolean",
      "description": "Absence can only start on beginning or finish on end of work day",
      "default": false
    },
    "needDeliveryDateConfirmation": {
      "type": "boolean",
      "default": false,
      "description": "Is proof of absence delivery date required - should field be visible on form"
    },
    "needConfirmationDocumentNumber": {
      "description": "Is absence confirmation document number needed",
      "type": "boolean",
      "default": false
    }
  }
}

###

POST http://localhost:9098/api/dictionary
Content-Type: application/json
X-Tenant-ID: default
Accept-Language: en-EN

{
  "children": [
    {
      "key": "uopdd",
      "label": "Opieka rozliczana dziennie",
      "name": "Child 1"
    },
    {
      "key": "uopdh",
      "label": "Opieka godzinowa",
      "name": "Child 2"

    }
  ],
  "key": "uopd",
  "name": "Urlop Opieka nad dzieckiem",
  "needConfirmationDocumentNumber": false,
  "needDeliveryDateConfirmation": true,
  "onlyOnBeginOrEnd": true,
  "type": "AbsenceType"
}

###

GET http://localhost:9098/api/dictionary/AbsenceType/uopd
Content-Type: application/json
X-Tenant-ID: default
Accept-Language: en-EN

> {%
client.test("Request should return proper data from previews request", function() {

    var statusCode = response.status;
    client.assert(statusCode === 200, "Expected response status 200 but but received '" + statusCode + "'");
});

client.test("Response content-type is json", function () {
    var type = response.contentType.mimeType;
    client.assert(type === "application/json", "Expected 'application/json' but received '" + type + "'");
});

client.test("key should be proper", function () {
    var o = response.body.valueOf()
    client.assert(o.key === "uopd")
});

client.test("type should be proper", function () {
    var o = response.body.valueOf()
    client.assert(o.type === "AbsenceType")
});

client.test("type should be proper", function () {
    var o = response.body.valueOf()
    client.assert(o.onlyOnBeginOrEnd === true)
});

%}

###

POST http://localhost:9098/api/dictionary
Content-Type: application/json
X-Tenant-ID: default
Accept-Language: en-EN

{
  "children": [
    {
      "key": "ch1",
      "label": "bbb",
      "name": "Child 1",
      "type": "AbsenceType"
    },
    {
      "key": "ch3",
      "label": "ttt",
      "name": "Child 3",
      "type": "AbsenceType"
    }
  ],
  "key": "Parent",
  "name": "parent",
  "needConfirmationDocumentNumber": false,
  "needDeliveryDateConfirmation": false,
  "onlyOnBeginOrEnd": true,
  "type": "AbsenceType"
}

###

PUT http://localhost:9098/api/dictionary
Content-Type: application/json
X-Tenant-ID: default
Accept-Language: en-EN

{
  "children": [
    {
      "key": "ch1",
      "label": "bbb",
      "name": "Child 1 updated",
      "type": "AbsenceType"
    },
    {
      "key": "ch3",
      "label": "ttt",
      "name": "Child 3 updated",
      "type": "AbsenceType"
    }
  ],
  "key": "Parent",
  "name": "New parent updated",
  "needConfirmationDocumentNumber": true,
  "needDeliveryDateConfirmation": false,
  "onlyOnBeginOrEnd": true,
  "type": "AbsenceType"
}

> {%
client.test("Request should return proper status", function() {

    var statusCode = response.status;
    client.assert(statusCode === 204, "Expected response status 204 but but received '" + statusCode + "'");
});

%}

###

GET http://localhost:9098/api/dictionary/AbsenceType
Content-Type: application/json
X-Tenant-ID: default
Accept-Language: en-EN

> {%
client.test("Request executed successfully", function() {
  client.assert(response.status === 200, "Response status is not 200");
});

client.test("Response content-type is json", function() {
  const type = response.contentType.mimeType;
  client.assert(type === "application/json", "Expected 'application/json' but received '" + type + "'");
});

%}
###

DELETE http://localhost:9098/api/dictionary/AbsenceType/k1
X-Tenant-ID: default


###

DELETE http://localhost:9098/api/dictionary/AbsenceType
X-Tenant-ID: default

###

GET http://localhost:9098/api/metadata
X-Tenant-ID: default

###

GET http://localhost:9098/api/metadata/AbsenceType
X-Tenant-ID: default
